local filename = os.getenv('HOME') .. '/docs/todo.norg'
local neorg = true -- neorg format if true, markdown if false
local nerdfont = true

conky.config = {
    alignment = 'top_right',
    background = true,
    border_width = 1,
    cpu_avg_samples = 2,
    default_color = 'white',
    default_outline_color = 'white',
    default_shade_color = 'white',
    double_buffer = true,
    draw_borders = true,
    draw_outline = false,
    draw_shades = false,
    font = nerdfont and 'JetBrainsMono Nerd Font Mono:size=12' or 'monospace:size=12',
    gap_x = 25,
    gap_y = 52,
    no_buffers = true,
    out_to_x = true,
    own_window = true,
    own_window_class = 'Conky',
    own_window_type = 'desktop',
    stippled_borders = 0,
    update_interval = 2.0,
    use_spacer = 'none',
    use_xft = true,
    -- own_window_transparent = true,
    own_window_argb_visual = true,
    own_window_argb_value = 130,
}

local file = io.open(filename)
local items = {}

-- local mark_complete = '✓ '
local mark_complete = nerdfont and ' ' or '✓ '
local mark_inprog   = nerdfont and ' ' or '● '
local mark_undone   = nerdfont and  ' ' or '◯ '

local title_char = neorg and '%*' or '#'
local undone_char = ' '
local inprog_char = neorg and '%-' or '%.'
local complete_char = 'x'
local lbegin = neorg and '[-%s]*' or ''

local re_title = '^' .. title_char .. '[%s]*(.*)'
local re_undone = '^' .. lbegin .. '%[' .. undone_char .. '%][%s]*(.*)'
local re_inprog = '^' .. lbegin .. '%[[' .. inprog_char .. ']%][%s]*(.*)'
local re_complete = '^' .. lbegin .. '%[' .. complete_char .. '%][%s]*(.*)'

if file ~= nil then
  for line in file:lines() do
    local title = line:match(re_title)
    local undone = line:match(re_undone)
    local complete = line:match(re_complete)
    local inprog = line:match(re_inprog)
    if title ~= nil then
      table.insert(items, {
        title = title,
        complete = 0,
        total = 0,
        subitems = '',
      })
    elseif undone ~= nil then
      local link = undone:match('%[(.+)%]{.+}') or undone:match('{(.+)}')
      undone = link or undone
      items[#items].total = items[#items].total + 1
      items[#items].subitems = items[#items].subitems .. '  ' .. mark_undone .. undone .. '\n'
    elseif inprog ~= nil then
      local link = inprog:match('%[(.+)%]{.+}') or inprog:match('{(.+)}')
      inprog = link or inprog
      items[#items].total = items[#items].total + 1
      items[#items].subitems = items[#items].subitems .. '  ' .. mark_inprog .. inprog .. '\n'
    elseif complete ~= nil then
      local link = complete:match('%[(.+)%]{.+}') or complete:match('{(.+)}')
      complete = link or complete
      items[#items].total = items[#items].total + 1
      items[#items].complete = items[#items].complete + 1
      items[#items].subitems = items[#items].subitems .. '  ' .. mark_complete .. complete .. '\n'
    end
  end
  file:close()
end

local todos = ''
for _, v in ipairs(items) do
  todos = todos .. string.format('%s [%d of %d]\n', v.title, v.complete, v.total) .. v.subitems
end

conky.text = [[${font}]] .. todos

-- vim: ft=lua
